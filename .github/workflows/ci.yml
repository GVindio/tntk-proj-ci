name: Integration

on:
  push:
    branches: ["prod"]
  pull_request:
    branches: ["prod"]
  workflow_dispatch:

env:
  ENVIRONMENT: ${{ github.ref_name }}
  ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN }}
  APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}
  APPLICATION_NAMESPACE: ${{ secrets.APPLICATION_NAMESPACE }}
  CD_DESTINATION_OWNER: ${{ secrets.CD_DESTINATION_OWNER }}
  CD_PROJECT: ${{ secrets.CD_PROJECT }}

jobs:
  configure_aws:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  build_images_and_push:
    runs-on: ubuntu-latest
    needs: [configure_aws]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push Docker images
        run: |
          docker build -t $REGISTRY/$ENVIRONMENT/api:${{ github.sha }} -f .devops/docker/api.Dockerfile .
          docker push $REGISTRY/$ENVIRONMENT/api:${{ github.sha }}

          # Repeat for other components as needed

  deploy:
    runs-on: ubuntu-latest
    needs: [build_images_and_push]
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/

  k8s_manifest_storing:
    runs-on: ubuntu-latest
    needs: [deploy]
    container:
      image: alpine/helm:latest
    steps:
      - name: Store Kubernetes manifests
        run: |
          helm template $APPLICATION_NAME .devops/helm/demoapp --output-dir ./deployments
          # Additional steps to push to another repository or storage
